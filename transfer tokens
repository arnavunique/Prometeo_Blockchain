pragma solidity ^0.8.0;

contract Token {
    // The batch of each user
    mapping(address => string) public batchOf;
    // The expiry date of the tokens
    uint256 public expiryDate;
    // The balance of each user's wallet
    mapping(address => uint256) public balanceOf;
    // Event for token transfer
    event Transfer(address indexed from, address indexed to, uint256 value);

    // Constructor function
    constructor() public {
        // Set the expiry date to 4 years from now
        expiryDate = now + 4 years;
    }

    // Function to transfer tokens from one user to another
    function transfer(address payable to, uint256 value) public {
        // Check if the tokens have expired
        require(now < expiryDate, "Tokens have expired");
        // Check if the sender has enough tokens to transfer
        require(balanceOf[msg.sender] >= value, "Insufficient balance");
        // Check if the sender is not
